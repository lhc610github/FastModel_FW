<?xml version="1.0"?>
<robot name="simple_airplane" xmlns:xacro="http://ros.org/wiki/xacro">

<xacro:property name="mesh_scale_iso" value="1.0"/>
<xacro:property name="mesh_scale" value="${mesh_scale_iso} ${mesh_scale_iso} ${mesh_scale_iso}"/>
<xacro:property name="PI" value="3.1415926535897931"/>

<xacro:property name="cameraRadius" value="0.04"/>
<xacro:property name="cameraCoverRadius" value="0.025"/>
<xacro:property name="cameraLength" value="0.06"/>
<xacro:property name="cameraMass" value="0.0" />
<xacro:property name="cameraSize" value="0.05"/>


<link name="base_link">
<origin xyz="0 0 0" rpy="0 0 0" />
</link>

<joint name="base_joint" type="fixed">
<gravity>0</gravity>
<origin xyz="0 0 0" rpy="0 0 0" />
<parent link="base_link" />
<child link="body_link" />
</joint>

<link name="body_link">
<inertial>
    <mass value="0.1" />
    <origin xyz="0 0 0" />
    <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1" />
</inertial>

<visual name="base_visual">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <geometry name="pioneer_geom">
    <mesh filename="package://fast_model/meshes/simple_airplane.dae" scale="${mesh_scale}" />
    </geometry>
</visual>

<collision>
    <origin xyz="0 0 0" rpy="0 0 0" />
    <geometry>
    <mesh filename="package://fast_model/meshes/simple_airplane.dae" scale="${mesh_scale}" />
    </geometry>
</collision>
</link>

<gazebo reference="base_link">
<gravity>0</gravity>
<material>
    Gazebo/White
</material>
</gazebo>

<gazebo reference="body_link">
<gravity>0</gravity>
    <material>
    Gazebo/White
</material>
</gazebo>

<joint name="body_to_camer" type="fixed">
    <parent link="body_link"/>
    <child link="camera"/>
    <origin xyz="${mesh_scale_iso*(-0.3)} 0 ${mesh_scale_iso*(-0.28)}" rpy="0 0.5 0"/>
</joint>

<link name="camera">
<visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <geometry>
    <sphere radius="${mesh_scale_iso*(0.16)}" />
    </geometry>
    <material name="CameraBlack">
    <color rgba="0.117 0.117 0.117 1.0"/>
    </material>
</visual>

<inertial>
    <mass value="${cameraMass}" />
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <inertia ixx="1" ixy="0" ixz="0" iyy="1" iyz="0" izz="1" />
</inertial>
</link>

<gazebo reference="camera">
<gravity>0</gravity>
    <sensor type="camera" name="camera_fpv">
    <update_rate>10.0</update_rate>
    <always_on>1</always_on>
    <visualize>false</visualize>
    <camera name="head">
        <!-- 1.3962634 --> <!-- Specify in RAD -->
        <!-- <horizontal_fov>1.09</horizontal_fov> -->
        <horizontal_fov>0.12</horizontal_fov>
        <image>
        <width>640</width>
        <height>480</height>
        <!-- <format>R8G8B8</format> -->
        <format>L8</format>
        </image>
        <clip>
        <near>0.02</near>
        <far>30000</far>
        </clip>
    </camera>
    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera_fpv</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
    </plugin>
    </sensor>
    <gravity>0</gravity>
    <material>
    Gazebo/Black
    </material>
</gazebo>


<gazebo>
<plugin name="object_controller" filename="libfast_model_gazebo_plugin.so">
    <odometryTopic>mavros/odom_enu</odometryTopic>
</plugin>
</gazebo>

</robot>